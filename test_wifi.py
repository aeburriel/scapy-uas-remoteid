# Copyright (C) 2023 Antonio Eugenio Burriel <aeburriel@gmail.com>
#
# This file is part of scapy-uas-remoteid.
#
# scapy-uas-remoteid is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# scapy-uas-remoteid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with scapy-uas-remoteid.  If not, see <http://www.gnu.org/licenses/>.


from uas_remoteid.common.wifi import parse_dot11
from scapy.layers.dot11 import Dot11


wifi_frame_beacon_opendroneid = \
    b"\x80\x00\x00\x00\xff\xff\xff\xff\xff\xff\x3e\xca\x3d\xfe\x2d\xd4" \
    b"\x3e\xca\x3d\xfe\x2d\xd4\x70\x02" \
    b"\x18\x42\x83\x00\x00\x00\x00\x00\xc8\x00\x11\x04\x00\x0b\x44\x72" \
    b"\x6f\x6e\x65\x49\x44\x54\x65\x73\x74\x01\x08\x82\x84\x8b\x96\x0c" \
    b"\x12\x18\x24\x03\x01\x06\x05\x04\x00\x02\x00\x00\x2a\x01\x04\x32" \
    b"\x04\x30\x48\x60\x6c\x30\x14\x01\x00\x00\x0f\xac\x04\x01\x00\x00" \
    b"\x0f\xac\x04\x01\x00\x00\x0f\xac\x02\x00\x00\x3b\x02\x51\x00\x7f" \
    b"\x08\x04\x00\x00\x00\x00\x00\x00\x40\xdd\xe9\xfa\x0b\xbc\x0d\x00" \
    b"\xf2\x19\x09\x02\x12\x31\x31\x32\x36\x32\x34\x31\x35\x30\x41\x39" \
    b"\x30\x45\x33\x41\x45\x31\x45\x43\x30\x00\x00\x00\x02\x42\x46\x44" \
    b"\x33\x34\x35\x34\x42\x37\x37\x38\x45\x35\x36\x35\x43\x32\x34\x42" \
    b"\x37\x30\x00\x00\x00\x12\x26\xb5\x00\x00\x58\x16\xaf\x1e\x38\xcd" \
    b"\xff\xff\x98\x08\xac\x08\x70\x08\x4a\x63\x15\x0e\x01\x00\x22\x10" \
    b"\x02\x3f\x00\x3f\xab\x01\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30" \
    b"\x31\x32\x33\x34\x35\x36\x37\x22\x11\x31\x32\x33\x34\x35\x36\x37" \
    b"\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33" \
    b"\x22\x12\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34" \
    b"\x35\x36\x37\x38\x39\x30\x31\x32\x33\x32\x00\x44\x72\x6f\x6e\x65" \
    b"\x20\x49\x44\x20\x74\x65\x73\x74\x20\x66\x6c\x69\x67\x68\x74\x2d" \
    b"\x2d\x2d\x42\x04\x10\x27\x00\x00\xf0\xd8\xff\xff\x01\x00\x00\xd0" \
    b"\x07\xd0\x07\x12\xf9\x07\xd5\x1c\xac\x01\x00\x52\x00\x46\x49\x4e" \
    b"\x38\x37\x61\x73\x74\x72\x64\x67\x65\x31\x32\x6b\x38\x00\x00\x00" \
    b"\x00\x00\x00\x00"

wifi_frame_nan_opendroneid = \
    b"\xd0\x00\x00\x00\x51\x6f\x9a\x01\x00\x00\x00\x00\x00\x00\x00\x00" \
    b"\x50\x6f\x9a\x01\x00\xff\x00\x00\x04\x09\x50\x6f\x9a\x13\x03\xd6" \
    b"\x00\x88\x69\x19\x9d\x92\x09\x01\x00\x10\xcc\x00\xf2\x19\x08\x02" \
    b"\x22\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35" \
    b"\x36\x37\x38\x39\x30\x00\x00\x00\x22\x10\x03\x44\x00\x3f\xab\x01" \
    b"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36" \
    b"\x37\x22\x11\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34" \
    b"\x35\x36\x37\x38\x00\x00\x00\x00\x00\x00\x22\x12\x33\x34\x35\x36" \
    b"\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x00\x00\x00" \
    b"\x00\x00\x00\x22\x13\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34" \
    b"\x35\x36\x37\x38\x39\x30\x00\x00\x00\x00\x00\x00\x32\x00\x4e\x41" \
    b"\x4e\x20\x46\x72\x61\x6d\x65\x20\x57\x69\x46\x69\x20\x54\x65\x73" \
    b"\x74\x20\x53\x49\x44\x42\x00\x3e\xf0\xec\x17\x0b\x27\x10\x00\x14" \
    b"\x00\x05\xfc\x08\x02\x08\x00\xef\x07\x00\x3f\xab\x01\x00\x52\x00" \
    b"\x39\x39\x38\x38\x37\x37\x36\x36\x35\x35\x34\x34\x33\x33\x32\x32" \
    b"\x31\x31\x30\x30\x00\x00\x00\x0e\x04\x00\x01\x00\x02\x00"

wifi_frame_nan_real = \
    b"\xd0\x00\x00\x00\x51\x6f\x9a\x01\x00\x00\x84\xcc\xa8\x60\x43\x24" \
    b"\x50\x6f\x9a\x01\x01\x79\x40\x0a" \
    b"\x04\x09\x50\x6f\x9a\x13\x03\x27\x00\x88\x69\x19\x9d\x92\x09\x01" \
    b"\x00\x10\x1d\x37\xf0\x19\x01\x40\x04\xa4\x85\x25\x1b\x6e\xdb\xb3" \
    b"\xb6\x01\x00\x32\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00" \
    b"\x0e\x04\x00\x01\x00\x02\x37"
print(wifi_frame_nan_real)
if __name__ == "__main__":
    for packet in [
        wifi_frame_beacon_opendroneid,
        wifi_frame_nan_opendroneid,
        wifi_frame_nan_real,
    ]:
        msg = parse_dot11(Dot11(packet))
        if msg is None:
            print("Error: unable to parse")
            continue
        msg.show()
