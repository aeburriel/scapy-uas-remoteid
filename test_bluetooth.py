# Copyright (C) 2023 Antonio Eugenio Burriel <aeburriel@gmail.com>
#
# This file is part of scapy-uas-remoteid.
#
# scapy-uas-remoteid is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# scapy-uas-remoteid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with scapy-uas-remoteid.  If not, see <http://www.gnu.org/licenses/>.


from uas_remoteid.common.bluetooth import parse_hci
from scapy.layers.bluetooth import HCI_Hdr


bt5_ble_lr_extended_opendroneid_hci_transmitted = \
    b"\x01\x37\x20\xee\x01\x03\x01\xea\xe9\x16\xfa\xff\x0d\x00\xf2\x19" \
    b"\x09\x02\x12\x31\x31\x32\x36\x32\x34\x31\x35\x30\x41\x39\x30\x45" \
    b"\x33\x41\x45\x31\x45\x43\x30\x00\x00\x00\x02\x42\x46\x44\x33\x34" \
    b"\x35\x34\x42\x37\x37\x38\x45\x35\x36\x35\x43\x32\x34\x42\x37\x30" \
    b"\x00\x00\x00\x12\x26\xb5\x00\x00\x58\x16\xaf\x1e\x38\xcd\xff\xff" \
    b"\x98\x08\xac\x08\x70\x08\x4a\x63\x15\x0e\x01\x00\x22\x10\x02\x3f" \
    b"\x00\x3f\xab\x01\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32" \
    b"\x33\x34\x35\x36\x37\x22\x11\x31\x32\x33\x34\x35\x36\x37\x38\x39" \
    b"\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x22\x12" \
    b"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36" \
    b"\x37\x38\x39\x30\x31\x32\x33\x32\x00\x44\x72\x6f\x6e\x65\x20\x49" \
    b"\x44\x20\x74\x65\x73\x74\x20\x66\x6c\x69\x67\x68\x74\x2d\x2d\x2d" \
    b"\x42\x04\x10\x27\x00\x00\xf0\xd8\xff\xff\x01\x00\x00\xd0\x07\xd0" \
    b"\x07\x12\xf9\x07\xd5\x1c\xac\x01\x00\x52\x00\x46\x49\x4e\x38\x37" \
    b"\x61\x73\x74\x72\x64\x67\x65\x31\x32\x6b\x38\x00\x00\x00\x00\x00" \
    b"\x00\x00"

bt5_ble_lr_extended_opendroneid_hci_received = \
    b"\x04\x3e\xb9\x0d\x01\x00\x00\x01\xdd\xe6\x54\xb4\x6f\x8b\x03\x03" \
    b"\x00\x7f\xc7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9f\x9e\x16\xfa" \
    b"\xff\x0d\x08\xf2\x19\x06\x02\x12\x31\x31\x32\x36\x32\x34\x31\x35" \
    b"\x30\x41\x39\x30\x45\x33\x41\x45\x31\x45\x43\x30\x00\x00\x00\x02" \
    b"\x42\x46\x44\x33\x34\x35\x34\x42\x37\x37\x38\x45\x35\x36\x35\x43" \
    b"\x32\x34\x42\x37\x30\x00\x00\x00\x12\x26\xb5\x00\x00\x58\x16\xaf" \
    b"\x1e\x38\xcd\xff\xff\x98\x08\xac\x08\x70\x08\x4a\x63\x15\x0e\x01" \
    b"\x00\x32\x00\x44\x72\x6f\x6e\x65\x20\x49\x44\x20\x74\x65\x73\x74" \
    b"\x20\x66\x6c\x69\x67\x68\x74\x2d\x2d\x2d\x42\x04\x10\x27\x00\x00" \
    b"\xf0\xd8\xff\xff\x01\x00\x00\xd0\x07\xd0\x07\x12\xf9\x07\xd5\x1c" \
    b"\xac\x01\x00\x52\x00\x46\x49\x4e\x38\x37\x61\x73\x74\x72\x64\x67" \
    b"\x65\x31\x32\x6b\x38\x00\x00\x00\x00\x00\x00\x00"

bt4_legacy_extended_opendroneid_hci_received = \
    b"\x04\x3e\x39\x0d\x01\x10\x00\x01\xc7\x43\xdc\x10\xea\x1f\x01\x00" \
    b"\xff\x7f\xdc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x1e\x16\xfa" \
    b"\xff\x0d\x00\x02\x12\x31\x31\x32\x36\x32\x34\x31\x35\x30\x41\x39" \
    b"\x30\x45\x33\x41\x45\x31\x45\x43\x30\x00\x00\x00"


if __name__ == "__main__":
    for packet in [
        bt5_ble_lr_extended_opendroneid_hci_transmitted,
        bt5_ble_lr_extended_opendroneid_hci_received,
        bt4_legacy_extended_opendroneid_hci_received
    ]:
        msg = parse_hci(HCI_Hdr(packet))
        if msg is None:
            print("Error: unable to parse")
            continue
        msg.show()
